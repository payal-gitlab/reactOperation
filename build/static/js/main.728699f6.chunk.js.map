{"version":3,"sources":["Components/EmailMessage.js","Components/Spinner.js","Components/Nominationform.js","Components/Routepath.js","App.js","reportWebVitals.js","index.js"],"names":["EmailMessage","props","console","log","location","state","data","name","Spinner","className","role","withRouter","useState","loading","setLoader","region","email","project","task","situation","field","setField","setInput","e","target","value","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","status","text","history","push","pathname","error","sendMail","htmlFor","type","onChange","required","Routepath","path","component","exact","Nominationform","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAOeA,EANM,SAACC,GAElB,OADAC,QAAQC,IAAIF,EAAMG,SAASC,MAAMC,KAAKC,MAElC,uCAAUN,EAAMG,SAASC,MAAMC,KAAKC,KAApC,gF,uBCQOC,EAVC,WACd,OACE,mCACE,qBAAKC,UAAU,iBAAiBC,KAAK,SAArC,SACE,sBAAMD,UAAU,UAAhB,6BCgEOE,eAlEQ,SAACV,GACpB,MAA8BW,oBAAS,GAAvC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA2BF,mBAAS,CAACG,OAAO,GAAGR,KAAK,GAAGS,MAAM,GAAGC,QAAQ,GAAGC,KAAK,GAAGC,UAAU,KAA7F,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAW,SAACC,GAEdF,EAAS,2BAAID,GAAL,kBAAcG,EAAEC,OAAOjB,KAAQgB,EAAEC,OAAOC,UA0BpD,OACI,mCAECZ,EAAW,uBAAMa,SAAU,SAACH,GAAD,OA1Bf,SAACA,GACdrB,QAAQC,IAAI,QACZoB,EAAEI,iBAEFb,GAAU,GAEKc,MAAM,6BAA8B,CACnDC,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAUb,KAClBc,MAAK,SAASC,GACbrB,GAAU,GACVZ,QAAQC,IAAI,WAAYgC,EAASC,OAAQD,EAASE,MAIlDpC,EAAMqC,QAAQC,KAAK,CAAEC,SAAU,WAAYnC,MAAM,CAACC,KAAOc,QAC1D,SAASqB,GACJvC,QAAQC,IAAI,YAAasC,MAMEC,CAASnB,IAAhC,UACR,iDACA,sBAAKd,UAAU,aAAf,UACI,uBAAOkC,QAAQ,sBAAf,4BACA,uBAAOC,KAAK,OAAOnC,UAAU,eAAgBF,KAAK,SAASkB,MAAOL,EAAML,OAAQ8B,SAAU,SAACtB,GAAD,OAAOD,EAASC,SAE9G,sBAAKd,UAAU,aAAf,UACI,uBAAOkC,QAAQ,sBAAf,sBACA,uBAAOC,KAAK,OAAOnC,UAAU,eAAgBF,KAAK,OAAOkB,MAAOL,EAAMb,KAAMsC,SAAU,SAACtB,GAAD,OAAOD,EAASC,IAAIuB,UAAQ,OAEtH,sBAAKrC,UAAU,aAAf,UACI,uBAAOkC,QAAQ,qBAAf,8BACA,uBAAOC,KAAK,QAAQnC,UAAU,eAAeF,KAAK,QAAQkB,MAAOL,EAAMJ,MAAO6B,SAAU,SAACtB,GAAD,OAAOD,EAASC,IAAIuB,UAAQ,OAExH,sBAAKrC,UAAU,aAAf,UACI,uBAAOkC,QAAQ,sBAAf,wCACA,uBAAOC,KAAK,OAAOnC,UAAU,eAAgBF,KAAK,YAAYkB,MAAOL,EAAMD,UAAW0B,SAAU,SAACtB,GAAD,OAAOD,EAASC,IAAIuB,UAAQ,OAEhI,sBAAKrC,UAAU,aAAf,UACI,uBAAOkC,QAAQ,sBAAf,4CACA,uBAAOC,KAAK,OAAOnC,UAAU,eAAgBF,KAAK,UAAUkB,MAAOL,EAAMH,QAAS4B,SAAU,SAACtB,GAAD,OAAOD,EAASC,IAAIuB,UAAQ,OAE5H,sBAAKrC,UAAU,aAAf,UACI,uBAAOkC,QAAQ,sBAAf,2CACA,uBAAOC,KAAK,OAAOnC,UAAU,eAAgBF,KAAK,OAAOkB,MAAOL,EAAMF,KAAM2B,SAAU,SAACtB,GAAD,OAAOD,EAASC,IAAIuB,UAAQ,OAEtH,wBAAQF,KAAK,SAAb,uBACO,cAAC,EAAD,SCjDJG,EAXG,WACd,OACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWjD,IAClC,cAAC,IAAD,CAAOkD,OAAK,EAACF,KAAK,IAAIC,UAAWE,QCiB9BC,MAtBf,WACE,OACE,qBAAK3C,UAAU,MAAf,SACE,cAAC,EAAD,OCIS4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.728699f6.chunk.js","sourcesContent":["import React , { useState } from 'react';\r\nconst EmailMessage = (props) => {\r\n    console.log(props.location.state.data.name)\r\n    return (\r\n        <h1>Hii, {props.location.state.data.name} Your Nomination form successfully sent and Acknowledgement in your email</h1>\r\n    )\r\n}\r\nexport default EmailMessage;","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <>\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Sending...</span>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React , { useState } from 'react';\r\nimport { withRouter,Redirect} from \"react-router-dom\";\r\n\r\nimport Spinner from './Spinner';\r\nconst Nominationform = (props) => {\r\n    const [loading , setLoader] = useState(true);\r\n    const [field , setField] = useState({region:\"\",name:\"\",email:\"\",project:\"\",task:\"\",situation:\"\"});\r\n    const setInput = (e) => {\r\n        \r\n        setField({...field , [e.target.name] : e.target.value});\r\n        \r\n    }\r\n    const sendMail = (e) => {\r\n        console.log(\"dfds\")\r\n        e.preventDefault();\r\n        // {loading ? window.location.href = \"/spinner\": <ResultsTable results={data} />}\r\n        setLoader(false);\r\n\r\n        let response = fetch(\"http://localhost:5000/send\", {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify(field),\r\n        }).then(function(response) {\r\n            setLoader(true);\r\n            console.log('SUCCESS!', response.status, response.text);\r\n            // <Redirect to={{pathname: '/message', state:{data:  field} }} />\r\n            // <Redirect to={{ pathname: '/message', data: { field } }} />\r\n            // window.location.href = \"/message\"\r\n            props.history.push({ pathname: '/message', state:{data:  field}  })\r\n        }, function(error) {\r\n                console.log('FAILED...', error);\r\n        });\r\n    }\r\n    return (\r\n        < >\r\n        \r\n        {loading ?  <form onSubmit={(e) => sendMail(e)}>\r\n            <h1>Nomination Form</h1>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputNominee\">Nominee Region</label>\r\n                <input type=\"text\" className=\"form-control\"  name=\"region\" value={field.region} onChange={(e) => setInput(e)}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputNominee\">Nominee*</label>\r\n                <input type=\"text\" className=\"form-control\"  name=\"name\" value={field.name} onChange={(e) => setInput(e)} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\">Nominee Email(*)</label>\r\n                <input type=\"email\" className=\"form-control\" name=\"email\" value={field.email} onChange={(e) => setInput(e)} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputNominee\">Summarize the Situation(*)</label>\r\n                <input type=\"text\" className=\"form-control\"  name=\"situation\" value={field.situation} onChange={(e) => setInput(e)} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputNominee\">Project/Initiative/Customer(*)</label>\r\n                <input type=\"text\" className=\"form-control\"  name=\"project\" value={field.project} onChange={(e) => setInput(e)} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputNominee\">Describe the task involved(*)</label>\r\n                <input type=\"text\" className=\"form-control\"  name=\"task\" value={field.task} onChange={(e) => setInput(e)} required/>\r\n            </div>\r\n            <button type=\"submit\">submit</button>\r\n        </form>  : <Spinner /> }\r\n        </>\r\n    )\r\n    \r\n}\r\nexport default withRouter(Nominationform);","import React from 'react';\r\n// import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport EmailMessage from './EmailMessage';\r\nimport Nominationform from './Nominationform';\r\nconst Routepath = () => {\r\n    return (\r\n        <Router>\r\n            {/* <switch> */}\r\n            <Route path='/message' component={EmailMessage} /> \r\n            <Route exact path='/' component={Nominationform} /> \r\n            {/* </switch> */}\r\n        </Router>\r\n        \r\n    )\r\n}\r\nexport default Routepath;","// import logo from './logo.svg';\nimport './App.css';\n// import Nominationform from './Components/Nominationform';\nimport Routepath from './Components/Routepath';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routepath />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}